# generated by datamodel-codegen:
#   filename:  apiv2.json
#   timestamp: 2024-04-02T23:47:10+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field


class WarId(BaseModel):
    """
    Represents the ID returned from the WarID endpoint.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None


class PlanetStatus(BaseModel):
    """
    Represents the 'current' status of a planet in the galactic war.
    """

    model_config = ConfigDict(extra='forbid')

    index: Optional[int] = None
    """
    The identifier of the PlanetInfo this status refers to.
    """
    owner: Optional[int] = None
    """
    The faction currently owning the planet.
    """
    health: Optional[int] = None
    """
    The current health / liberation of a planet.
    """
    regen_per_second: Optional[float] = Field(None, alias='regenPerSecond')
    """
    If left alone, how much the health of the planet would regenerate.
    """
    players: Optional[int] = None
    """
    The amount of helldivers currently active on this planet.
    """


class PlanetAttack(BaseModel):
    """
    Represents an attack on a PlanetInfo.
    """

    model_config = ConfigDict(extra='forbid')

    source: Optional[int] = None
    """
    Where the attack originates from.
    """
    target: Optional[int] = None
    """
    The planet under attack.
    """


class Campaign(BaseModel):
    """
    Contains information of ongoing campaigns.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    """
    The identifier of this campaign.
    """
    planet_index: Optional[int] = Field(None, alias='planetIndex')
    """
    The Index of the planet this campaign refers to.
    """
    type: Optional[int] = None
    """
    A numerical type, indicates the type of campaign (see helldivers-2/json).
    """
    count: Optional[int] = None
    """
    A numerical count, the amount of campaigns the planet has seen.
    """


class JointOperation(BaseModel):
    """
    Represents a joint operation.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    planet_index: Optional[int] = Field(None, alias='planetIndex')
    hq_node_index: Optional[int] = Field(None, alias='hqNodeIndex')


class PlanetEvent(BaseModel):
    """
    An ongoing event on a planet.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    """
    The unique identifier of this event.
    """
    planet_index: Optional[int] = Field(None, alias='planetIndex')
    """
    The index of the planet.
    """
    event_type: Optional[int] = Field(None, alias='eventType')
    """
    A numerical identifier that indicates what type of event this is.
    """
    race: Optional[int] = None
    """
    The identifier of the faction that owns the planet currently.
    """
    health: Optional[int] = None
    """
    The current health of the planet.
    """
    start_time: Optional[int] = Field(None, alias='startTime')
    """
    When this event started.
    """
    expire_time: Optional[int] = Field(None, alias='expireTime')
    """
    When the event will end.
    """
    campaign_id: Optional[int] = Field(None, alias='campaignId')
    """
    The unique identifier of a related campaign.
    """
    joint_operation_ids: Optional[List[int]] = Field(None, alias='jointOperationIds')
    """
    A list of identifiers of related joint operations.
    """


class PlanetCoordinates(BaseModel):
    """
    Represents a set of coordinates returned by ArrowHead's API.
    """

    model_config = ConfigDict(extra='forbid')

    x: Optional[float] = None
    """
    The X coordinate
    """
    y: Optional[float] = None
    """
    The Y coordinate
    """


class HomeWorld(BaseModel):
    """
    Represents information about the homeworld(s) of a given race.
    """

    model_config = ConfigDict(extra='forbid')

    race: Optional[int] = None
    """
    The identifier of the race (faction) this describes the homeworld of.
    """
    planet_indices: Optional[List[int]] = Field(None, alias='planetIndices')
    """
    A list of Index identifiers.
    """


class GalaxyStats(BaseModel):
    """
    Represents galaxy wide statistics.
    """

    model_config = ConfigDict(extra='forbid')

    missions_won: Optional[int] = Field(None, alias='missionsWon')
    """
    The amount of missions won.
    """
    missions_lost: Optional[int] = Field(None, alias='missionsLost')
    """
    The amount of missions lost.
    """
    mission_time: Optional[int] = Field(None, alias='missionTime')
    """
    The total amount of time spent planetside (in seconds).
    """
    bug_kills: Optional[int] = Field(None, alias='bugKills')
    """
    The total amount of bugs killed since start of the season.
    """
    automaton_kills: Optional[int] = Field(None, alias='automatonKills')
    """
    The total amount of automatons killed since start of the season.
    """
    illuminate_kills: Optional[int] = Field(None, alias='illuminateKills')
    """
    The total amount of Illuminate killed since start of the season.
    """
    bullets_fired: Optional[int] = Field(None, alias='bulletsFired')
    """
    The total amount of bullets fired
    """
    bullets_hit: Optional[int] = Field(None, alias='bulletsHit')
    """
    The total amount of bullets hit
    """
    time_played: Optional[int] = Field(None, alias='timePlayed')
    """
    The total amount of time played (including off-planet) in seconds.
    """
    deaths: Optional[int] = None
    """
    The amount of casualties on the side of humanity.
    """
    revives: Optional[int] = None
    """
    The amount of revives(?).
    """
    friendlies: Optional[int] = None
    """
    The amount of friendly fire casualties.
    """
    mission_success_rate: Optional[int] = Field(None, alias='missionSuccessRate')
    """
    A percentage indicating how many started missions end in success.
    """
    accurracy: Optional[int] = None
    """
    A percentage indicating average accuracy of Helldivers.
    """


class PlanetStats(BaseModel):
    """
    Similar to GalaxyStats, but scoped to a specific planet.
    """

    model_config = ConfigDict(extra='forbid')

    planet_index: Optional[int] = Field(None, alias='planetIndex')
    """
    The Index for which planet these stats are.
    """
    missions_won: Optional[int] = Field(None, alias='missionsWon')
    """
    The amount of missions won.
    """
    missions_lost: Optional[int] = Field(None, alias='missionsLost')
    """
    The amount of missions lost.
    """
    mission_time: Optional[int] = Field(None, alias='missionTime')
    """
    The total amount of time spent planetside (in seconds).
    """
    bug_kills: Optional[int] = Field(None, alias='bugKills')
    """
    The total amount of bugs killed since start of the season.
    """
    automaton_kills: Optional[int] = Field(None, alias='automatonKills')
    """
    The total amount of automatons killed since start of the season.
    """
    illuminate_kills: Optional[int] = Field(None, alias='illuminateKills')
    """
    The total amount of Illuminate killed since start of the season.
    """
    bullets_fired: Optional[int] = Field(None, alias='bulletsFired')
    """
    The total amount of bullets fired
    """
    bullets_hit: Optional[int] = Field(None, alias='bulletsHit')
    """
    The total amount of bullets hit
    """
    time_played: Optional[int] = Field(None, alias='timePlayed')
    """
    The total amount of time played (including off-planet) in seconds.
    """
    deaths: Optional[int] = None
    """
    The amount of casualties on the side of humanity.
    """
    revives: Optional[int] = None
    """
    The amount of revives(?).
    """
    friendlies: Optional[int] = None
    """
    The amount of friendly fire casualties.
    """
    mission_success_rate: Optional[int] = Field(None, alias='missionSuccessRate')
    """
    A percentage indicating how many started missions end in success.
    """
    accurracy: Optional[int] = None
    """
    A percentage indicating average accuracy of Helldivers.
    """


class NewsFeedItem(BaseModel):
    """
    Represents an item in the newsfeed of Super Earth.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    """
    The identifier of this newsfeed item.
    """
    published: Optional[int] = None
    """
    A unix timestamp (in seconds) when this item was published.
    """
    type: Optional[int] = None
    """
    A numerical type, purpose unknown.
    """
    message: Optional[str] = None
    """
    The message containing a human readable text.
    """


class Task(BaseModel):
    """
    Represents a task in an Assignment.
    It's exact values are not known, therefor little of it's purpose is clear.
    """

    model_config = ConfigDict(extra='forbid')

    type: Optional[int] = None
    """
    A numerical value, purpose unknown.
    """
    values: Optional[List[int]] = None
    """
    A list of numerical values, purpose unknown.
    """
    value_types: Optional[List[int]] = Field(None, alias='valueTypes')
    """
    A list of numerical values, purpose unknown.
    """


class Reward(BaseModel):
    """
    Represents the reward of an Assignment.
    """

    model_config = ConfigDict(extra='forbid')

    type: Optional[int] = None
    """
    The type of reward, currently only one value is known: 1 which represents Medals
    """
    id32: Optional[int] = None
    """
    Internal identifier of this Reward.
    """
    amount: Optional[int] = None
    """
    The amount of Type the players will receive upon completion.
    """


class Statistics(BaseModel):
    """
    Contains statistics of missions, kills, success rate etc.
    """

    model_config = ConfigDict(extra='forbid')

    missions_won: Optional[int] = Field(None, alias='missionsWon')
    """
    The amount of missions won.
    """
    missions_lost: Optional[int] = Field(None, alias='missionsLost')
    """
    The amount of missions lost.
    """
    mission_time: Optional[int] = Field(None, alias='missionTime')
    """
    The total amount of time spent planetside (in seconds).
    """
    terminid_kills: Optional[int] = Field(None, alias='terminidKills')
    """
    The total amount of bugs killed since start of the season.
    """
    automaton_kills: Optional[int] = Field(None, alias='automatonKills')
    """
    The total amount of automatons killed since start of the season.
    """
    illuminate_kills: Optional[int] = Field(None, alias='illuminateKills')
    """
    The total amount of Illuminate killed since start of the season.
    """
    bullets_fired: Optional[int] = Field(None, alias='bulletsFired')
    """
    The total amount of bullets fired
    """
    bullets_hit: Optional[int] = Field(None, alias='bulletsHit')
    """
    The total amount of bullets hit
    """
    time_played: Optional[int] = Field(None, alias='timePlayed')
    """
    The total amount of time played (including off-planet) in seconds.
    """
    deaths: Optional[int] = None
    """
    The amount of casualties on the side of humanity.
    """
    revives: Optional[int] = None
    """
    The amount of revives(?).
    """
    friendlies: Optional[int] = None
    """
    The amount of friendly fire casualties.
    """
    mission_success_rate: Optional[int] = Field(None, alias='missionSuccessRate')
    """
    A percentage indicating how many started missions end in success.
    """
    accuracy: Optional[int] = None
    """
    A percentage indicating average accuracy of Helldivers.
    """
    player_count: Optional[int] = Field(None, alias='playerCount')
    """
    The total amount of players present (at the time of the snapshot).
    """


class Task2(BaseModel):
    """
    Represents a task in an Assignment that needs to be completed
    to finish the assignment.
    """

    model_config = ConfigDict(extra='forbid')

    type: Optional[int] = None
    """
    The type of task this represents.
    """
    values: Optional[List[int]] = None
    """
    A list of numbers, purpose unknown.
    """
    value_types: Optional[List[int]] = Field(None, alias='valueTypes')
    """
    A list of numbers, purpose unknown
    """


class Reward2(BaseModel):
    """
    The reward for completing an Assignment.
    """

    model_config = ConfigDict(extra='forbid')

    type: Optional[int] = None
    """
    The type of reward (medals, super credits, ...).
    """
    amount: Optional[int] = None
    """
    The amount of Type that will be awarded.
    """


class Position(BaseModel):
    """
    Represents a position on the galactic war map.
    """

    model_config = ConfigDict(extra='forbid')

    x: Optional[float] = None
    """
    The X coordinate.
    """
    y: Optional[float] = None
    """
    The Y coordinate.
    """


class Dispatch(BaseModel):
    """
    A message from high command to the players, usually updates on the status of the war effort.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    """
    The unique identifier of this dispatch.
    """
    published: Optional[datetime] = None
    """
    When the dispatch was published.
    """
    type: Optional[int] = None
    """
    The type of dispatch, purpose unknown.
    """
    message: Optional[str] = None
    """
    The message this dispatch represents.
    """


class SteamNews(BaseModel):
    """
    Represents a new article from Steam's news feed.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[str] = None
    """
    The identifier assigned by Steam to this news item.
    """
    title: Optional[str] = None
    """
    The title of the Steam news item.
    """
    url: Optional[str] = None
    """
    The URL to Steam where this news item was posted.
    """
    author: Optional[str] = None
    """
    The author who posted this message on Steam.
    """
    content: Optional[str] = None
    """
    The message posted by Steam, currently in Steam's weird markdown format.
    """
    published_at: Optional[datetime] = Field(None, alias='publishedAt')
    """
    When this message was posted.
    """


class WarStatus(BaseModel):
    """
    Represents a snapshot of the current status of the galactic war.
    """

    model_config = ConfigDict(extra='forbid')

    war_id: Optional[int] = Field(None, alias='warId')
    """
    The war season this snapshot refers to.
    """
    time: Optional[int] = None
    """
    The time this snapshot was taken.
    """
    impact_multiplier: Optional[float] = Field(None, alias='impactMultiplier')
    """
    This is the factor by which XP at the end of a mission is multiplied to calculate the impact on liberation
    """
    story_beat_id32: Optional[int] = Field(None, alias='storyBeatId32')
    """
    Internal identifier, purpose unknown.
    """
    planet_status: Optional[List[PlanetStatus]] = Field(None, alias='planetStatus')
    """
    A list of statuses for planets.
    """
    planet_attacks: Optional[List[PlanetAttack]] = Field(None, alias='planetAttacks')
    """
    A list of attacks currently ongoing.
    """
    campaigns: Optional[List[Campaign]] = None
    """
    A list of ongoing campaigns in the galactic war.
    """
    joint_operations: Optional[List[JointOperation]] = Field(
        None, alias='jointOperations'
    )
    """
    A list of JointOperations.
    """
    planet_events: Optional[List[PlanetEvent]] = Field(None, alias='planetEvents')
    """
    A list of ongoing PlanetEvents.
    """


class PlanetInfo(BaseModel):
    """
    Represents information of a planet from the 'WarInfo' endpoint returned by ArrowHead's API.
    """

    model_config = ConfigDict(extra='forbid')

    index: Optional[int] = None
    """
    The numerical identifier for this planet, used as reference by other properties throughout the API (like Waypoints).
    """
    settings_hash: Optional[int] = Field(None, alias='settingsHash')
    """
    Purpose unknown at this time.
    """
    position: Optional[PlanetCoordinates] = None
    """
    A set of X/Y coordinates specifying the position of this planet on the galaxy map.
    """
    waypoints: Optional[List[int]] = None
    """
    A list of links to other planets (supply lines).
    """
    sector: Optional[int] = None
    """
    The identifier of the sector this planet is located in.
    """
    max_health: Optional[int] = Field(None, alias='maxHealth')
    """
    The 'health' of this planet, indicates how much liberation it needs to switch sides.
    """
    disabled: Optional[bool] = None
    """
    Whether this planet is currently considered active in the galactic war.
    """
    initial_owner: Optional[int] = Field(None, alias='initialOwner')
    """
    The identifier of the faction that initially owned this planet.
    """


class WarSummary(BaseModel):
    """
    Gets general statistics about the galaxy and specific planets.
    """

    model_config = ConfigDict(extra='forbid')

    galaxy_stats: Optional[GalaxyStats] = None
    """
    Contains galaxy wide statistics aggregated from all planets.
    """
    planets_stats: Optional[List[PlanetStats]] = None
    """
    Contains statistics for specific planets.
    """


class Setting(BaseModel):
    """
    Contains the details of an Assignment like reward and requirements.
    """

    model_config = ConfigDict(extra='forbid')

    type: Optional[int] = None
    """
    The type of assignment, values unknown at the moment.
    """
    override_title: Optional[str] = Field(None, alias='overrideTitle')
    """
    The title of this assignment.
    """
    override_brief: Optional[str] = Field(None, alias='overrideBrief')
    """
    The briefing (description) of this assignment.
    """
    task_description: Optional[str] = Field(None, alias='taskDescription')
    """
    A description of what is expected of Helldivers to complete the assignment.
    """
    tasks: Optional[List[Task]] = None
    """
    A list of Tasks describing the assignment requirements.
    """
    reward: Optional[Reward] = None
    """
    Contains information on the rewards players willr eceive upon completion.
    """
    flags: Optional[int] = None
    """
    Flags, suspected to be a binary OR'd value, purpose unknown.
    """


class War(BaseModel):
    """
    Global information of the ongoing war.
    """

    model_config = ConfigDict(extra='forbid')

    started: Optional[datetime] = None
    """
    When this war was started.
    """
    ended: Optional[datetime] = None
    """
    When this war will end (or has ended).
    """
    now: Optional[datetime] = None
    """
    The time the snapshot of the war was taken, also doubles as the timestamp of which all other data dates from.
    """
    client_version: Optional[str] = Field(None, alias='clientVersion')
    """
    The minimum game client version required to play in this war.
    """
    factions: Optional[List[str]] = None
    """
    A list of factions currently involved in the war.
    """
    impact_multiplier: Optional[float] = Field(None, alias='impactMultiplier')
    """
    A fraction used to calculate the impact of a mission on the war effort.
    """
    statistics: Optional[Statistics] = None
    """
    The statistics available for the galaxy wide war effort.
    """


class Assignment2(BaseModel):
    """
    Represents an assignment given by Super Earth to the community.
    This is also known as 'Major Order's in the game.
    """

    model_config = ConfigDict(extra='forbid')

    id: Optional[int] = None
    """
    The unique identifier of this assignment.
    """
    title: Optional[str] = None
    """
    The title of the assignment.
    """
    briefing: Optional[str] = None
    """
    A long form description of the assignment, usually contains context.
    """
    description: Optional[str] = None
    """
    A very short summary of the description.
    """
    tasks: Optional[List[Task2]] = None
    """
    A list of tasks that need to be completed for this assignment.
    """
    reward: Optional[Reward2] = None
    """
    The reward for completing the assignment.
    """

class Event(BaseModel):
    """	
    An ongoing event on a Planet.
    """

    id: Optional[int] = None
    """
    The unique identifier of this event.
    """
    event_type: Optional[int] = Field(None, alias='eventType')
    """
    The type of event.
    """
    faction: Optional[str] = None
    """
    The faction that initiated the event.
    """
    health: Optional[int] = None
    """
    The health of the Planet for the event.
    """
    max_health: Optional[int] = Field(None, alias="maxHealth")
    """
    The max health of the Planet for the event.
    """
    start_time: Optional[datetime] = Field(None, alias='startTime')
    """
    When the event started.
    """
    end_time: Optional[datetime] = Field(None, alias='endTime')
    """
    When the event will end.
    """
    campaign_id: Optional[int] = Field(None, alias='campaignId')
    """
    The identifier of the Campaign linked to this event.
    """
    joint_operation_ids: Optional[List[int]] = Field(None, alias='jointOperationIds')
    """
    A list of joint operation identifier linked to this event.
    """


class Planet(BaseModel):
    """
    Contains all aggregated information AH has about a planet.
    """

    model_config = ConfigDict(extra='forbid')

    index: Optional[int] = None
    """
    The unique identifier ArrowHead assigned to this planet.
    """
    name: Optional[str] = None
    """
    The name of the planet, as shown in game.
    """
    sector: Optional[str] = None
    """
    The name of the sector the planet is in, as shown in game.
    """
    hash: Optional[int] = None
    """
    A hash assigned to the planet by ArrowHead, purpose unknown.
    """
    position: Optional[Position] = None
    """
    The coordinates of this planet on the galactic war map.
    """
    waypoints: Optional[List[int]] = None
    """
    A list of Index of all the planets to which this planet is connected.
    """
    max_health: Optional[int] = Field(None, alias='maxHealth')
    """
    The maximum health pool of this planet.
    """
    health: Optional[int] = None
    """
    The current planet this planet has.
    """
    disabled: Optional[bool] = None
    """
    Whether or not this planet is disabled, as assigned by ArrowHead.
    """
    initial_owner: Optional[str] = Field(None, alias='initialOwner')
    """
    The faction that originally owned the planet.
    """
    current_owner: Optional[str] = Field(None, alias='currentOwner')
    """
    The faction that currently controls the planet.
    """
    regen_per_second: Optional[float] = Field(None, alias='regenPerSecond')
    """
    How much the planet regenerates per second if left alone.
    """
    event: Optional[Event] = None
    """
    Information on the active event ongoing on this planet, if one is active
    """
    statistics: Optional[Statistics] = None
    """
    A set of statistics scoped to this planet.
    """


class WarInfo(BaseModel):
    """
    Represents mostly static information of the current galactic war.
    """

    model_config = ConfigDict(extra='forbid')

    war_id: Optional[int] = Field(None, alias='warId')
    """
    The identifier of the war season this WarInfo represents.
    """
    start_date: Optional[int] = Field(None, alias='startDate')
    """
    A unix timestamp (in seconds) when this season started.
    """
    end_date: Optional[int] = Field(None, alias='endDate')
    """
    A unix timestamp (in seconds) when this season will end.
    """
    minimum_client_version: Optional[str] = Field(None, alias='minimumClientVersion')
    """
    A version string indicating the minimum game client version the API supports.
    """
    planet_infos: Optional[List[PlanetInfo]] = Field(None, alias='planetInfos')
    """
    A list of planets involved in this season's war.
    """
    home_worlds: Optional[List[HomeWorld]] = Field(None, alias='homeWorlds')
    """
    A list of homeworlds for the races (factions) involved in this war.
    """


class Assignment(BaseModel):
    """
    Represents an assignment given from Super Earth to the Helldivers.
    """

    model_config = ConfigDict(extra='forbid')

    id32: Optional[int] = None
    """
    Internal identifier of this assignment.
    """
    progress: Optional[List[int]] = None
    """
    A list of numbers, how they represent progress is unknown.
    """
    expires_in: Optional[int] = Field(None, alias='expiresIn')
    """
    The amount of seconds until this assignment expires.
    """
    setting: Optional[Setting] = None
    """
    Contains detailed information on this assignment like briefing, rewards, ...
    """


class Campaign2(BaseModel):
    """
    Represents an ongoing campaign on a planet.
    """

    id: Optional[int] = None
    """
    The unique identifier of this Campaign.
    """
    planet: Optional[Planet] = None
    """
    The planet on which this campaign is being fought.
    """
    type: Optional[int] = None
    """
    The type of campaign, this should be mapped onto an enum.
    """
    count: Optional[int] = None
    """
    Indicates how many campaigns have already been fought on this Planet.
    """
    attacking: Optional[List[int]] = None
    """
    List of planet indices this planet is attacking
    """

class FullStatus(BaseModel):
    war: Optional[War] = None
    planets: Optional[List[Planet]] = None
    assignments: Optional[List[Assignment2]] = None
    campaigns: Optional[List[Campaign2]] = None
    dispatches: Optional[List[Dispatch]] = None
    events: Optional[List[Event]] = None
